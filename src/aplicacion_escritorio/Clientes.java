package aplicacion_escritorio;


import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.xml.bind.Marshaller.Listener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nacho
 */
public class Clientes extends Myventana {

   private JDesktopPane padre;
       Statement stmt=null;
       TableRowSorter<TableModel> ordenar;
       String url;
       String[] nombre_columna={"Dni","Nombre","Apellido","Telefono","Provincia","Localidad","CP","Direccion","E-mail"};
       String accion;
       DefaultTableModel modelotabla;
       int lineaseleccionada;
       Color color_fondo;
       String sentencia_sql="SELECT * FROM CLIENTE";
       Border borde;
       String dni;
       String nombre;
       String apellido;
       String telefono;
       String provincia;
       String localidad;
       String cp;
       String direccion;
       String email;
       Panel_cliente añadir;
   
      Conectar_datos conector;
      
    public Clientes(String titulo, JDesktopPane padre, Conectar_datos conector) {
        super(titulo,padre);
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        cargar_tabla_resultados();
        this.setResizable(false);
         this.padre=padre;
        accion="";
        color_fondo=this.getBackground();
        Text_titulo.setText(titulo);
        this.conector=conector;
        consulta("SELECT * FROM cliente");
        //consulta("SELECT * FROM cliente");
         addKeyListener(new KeyListener() {

             @Override
             public void keyTyped(KeyEvent ke) {
                if(ke.getKeyCode()==KeyEvent.VK_1) System.out.println("presionado f4");
        
       

    
             }

             @Override
             public void keyPressed(KeyEvent ke) {
             
             }

             @Override
             public void keyReleased(KeyEvent ke) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }
         });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_pestañas = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_resultado = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        Text_busqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Text_titulo = new javax.swing.JLabel();
        nuevo_cliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Panel_pestañas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Panel_pestañasMouseClicked(evt);
            }
        });
        Panel_pestañas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Panel_pestañasStateChanged(evt);
            }
        });
        Panel_pestañas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Panel_pestañasFocusGained(evt);
            }
        });
        Panel_pestañas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                Panel_pestañasPropertyChange(evt);
            }
        });

        Table_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_resultadoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Table_resultadoMouseEntered(evt);
            }
        });
        Table_resultado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Table_resultadoFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(Table_resultado);

        Panel_pestañas.addTab("busqueda", jScrollPane1);

        Text_busqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Text_busquedaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Text_busquedaKeyTyped(evt);
            }
        });

        jLabel1.setText("Buscar");

        Text_titulo.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        Text_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        nuevo_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Users-Add-user-icon.png"))); // NOI18N
        nuevo_cliente.setToolTipText("Nuevo Cliente");
        nuevo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo_clienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(Text_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Text_titulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Panel_pestañas, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nuevo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Text_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nuevo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(Text_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_pestañas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Text_busquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_busquedaKeyPressed
        lineaseleccionada=Table_resultado.getSelectedRow();
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) consulta_todos();
    }//GEN-LAST:event_Text_busquedaKeyPressed

    private void Table_resultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_resultadoMouseClicked
        if (evt.getClickCount() == 2) {
         String id_busqueda="";   
            
        
        String nombre_pestaña=(String)Table_resultado.getValueAt(Table_resultado.getSelectedRow(),2)+", " + (String)Table_resultado.getValueAt(Table_resultado.getSelectedRow(),1);
        if(devolver_pestaña(nombre_pestaña)==-1)
        {
        id_busqueda=(String)Table_resultado.getValueAt(Table_resultado.getSelectedRow(),0);
        /*cargar una nueva pestaña nombre de pestaña, conector de datos y indice de busqueda*/
        Panel_pestañas.addTab(nombre_pestaña, new Panel_cliente(Panel_pestañas,this.conector,id_busqueda));
        }
       
           
         Panel_pestañas.setSelectedIndex(devolver_pestaña(nombre_pestaña));
         
       
        } 
        
    }//GEN-LAST:event_Table_resultadoMouseClicked

    private void Table_resultadoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_resultadoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_resultadoMouseEntered

    private void Table_resultadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Table_resultadoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_resultadoFocusGained

    private void Panel_pestañasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Panel_pestañasFocusGained
       
    }//GEN-LAST:event_Panel_pestañasFocusGained

    private void Panel_pestañasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_Panel_pestañasPropertyChange
         if(Panel_pestañas.getSelectedIndex()==0)
        {
            System.out.println("pesataña 1");
        }   
        
    }//GEN-LAST:event_Panel_pestañasPropertyChange

    private void Panel_pestañasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Panel_pestañasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Panel_pestañasMouseClicked

    private void Panel_pestañasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Panel_pestañasStateChanged
        if(Panel_pestañas.getSelectedIndex()==0 && this.Text_titulo.getText().isEmpty()==false)
        {
            System.out.println("pesataña 1");
            if(Table_resultado!=null)
            {    
            consulta(this.sentencia_sql);
            Table_resultado.changeSelection(lineaseleccionada+1, 0, false, false);
            }
            System.out.println(""+Panel_pestañas.getSelectedIndex());
        }   
    }//GEN-LAST:event_Panel_pestañasStateChanged

    private void nuevo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo_clienteActionPerformed
        if (añadir==null)
                {        
        añadir= new Panel_cliente(Panel_pestañas, conector,añadir);
        Panel_pestañas.addTab("Nuevo Cliente", añadir);
        
       
                }
        else
        {
            Panel_pestañas.addTab("Nuevo Cliente", añadir);
        }
        Panel_pestañas.setSelectedIndex(devolver_pestaña("Nuevo Cliente"));
    }//GEN-LAST:event_nuevo_clienteActionPerformed

    private void Text_busquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_busquedaKeyTyped
      consulta_todos();
    }//GEN-LAST:event_Text_busquedaKeyTyped

    
     public void eliminar_lineas()
    {
        
       int lineas=modelotabla.getRowCount()-1;
        System.out.println(""+lineas);
        for(int i=lineas; i>=0;i--)
        {
            modelotabla.removeRow(i);
        }
    } 
     public void consulta_todos()
    {
        String sql="SELECT * FROM cliente WHERE ";
        StringTokenizer campos= new StringTokenizer(Text_busqueda.getText().toUpperCase());
        String token="";
        
     
        while(campos.hasMoreTokens())
        {    
        token=campos.nextToken();
      /*  sql = sql + "(UPPER(dni) like '" + token +"%' OR " + "UPPER(nombre) like '" + token +"%' OR " + "UPPER(apellido) like '" + token +"%' OR "
        + "UPPER(telefono) like '" + token +"%' OR " + "UPPER(cp) like '" + token +"%' OR " + "UPPER(provincia) like '" + token +"%' OR "
         + "UPPER(localidad) like '" + token +"%' OR " + "UPPER(direccion) like '" + token +"%' OR " 
          + "UPPER(email) like '" + token +"%') AND "      ;*/
        
         sql = sql + "(UPPER(dni) like '" + token +"%' OR " + "UPPER(dni) like '% " + token +"%' OR "
        + "UPPER(nombre) like '" + token +"%' OR "+ "UPPER(nombre) like '% " + token +"%' OR " 
        +  "UPPER(apellido) like '" + token +"%' OR " + "UPPER(apellido) like '% " + token +"%' OR "
        + "UPPER(telefono) like '" + token +"%' OR " + "UPPER(telefono) like '% " + token +"%' OR "
        + "UPPER(cp) like '" + token +"%' OR "  + "UPPER(cp) like '% " + token +"%' OR "  
        + "UPPER(provincia) like '" + token +"%' OR " + "UPPER(provincia) like '% " + token +"%' OR "
        + "UPPER(localidad) like '" + token +"%' OR " + "UPPER(localidad) like '% " + token +"%' OR " 
        + "UPPER(direccion) like '" + token +"%' OR " + "UPPER(direccion) like '% " + token +"%' OR "
        + "UPPER(email) like '" + token +"%' OR " + "UPPER(email) like '% " + token +"%') AND "    ;
        
        }
       consulta(sql.substring(0, sql.length()-4));
        System.out.println(sql.substring(0, sql.length()-4));
     if(!Text_busqueda.equals(""))
     {
         
     }    
    }        
    public void consulta() 
    {
        eliminar_lineas();
        sentencia_sql="";
        /*sentencia_sql="SELECT * FROM clientes where nombre like '%"+Text_nombre.getText()+"%'" + "and dni like '%"+ Text_dni.getText() +"%' " 
                + "and telefono like '%"+ Text_telefono.getText()+"%' " + "and apellido like '%"+ Text_apellido.getText()+"%'"
                + "and cp like '%"+ text_cp.getText()+"%'" + "and localidad like '%"+ Text_localidad.getText()+"%'"
                + "and provincia like '%"+ Text_provincia.getText()+"%'" + "and direccion like '%"+ Text_direccion.getText()+"%'" 
                + "and email like '%"+ Text_mail.getText()+"%'"

                ;*/
        ResultSet rs;
        rs = conector.consulta(sentencia_sql);
        if (rs!=null )
        {
            try {
                while(rs.next())
                {

                    Object[] fila= new Object[9];
                    fila[0]=rs.getString("dni");
                    fila[1]=rs.getString("nombre");
                    fila[2]=rs.getString("apellido");
                    fila[3]=rs.getString("telefono");
                    fila[4]=rs.getString("localidad");
                    fila[5]=rs.getString("provincia");
                    fila[6]=rs.getString("cp");
                    fila[7]=rs.getString("direccion");
                    fila[8]=rs.getString("email");
                    
                    modelotabla.addRow(fila);
                    // String text=Text_Area_Resultado.getText();
                    // Text_Area_Resultado.setText(text++ "\t" + rs.getString("nombre")+ "\t" + rs.getString("apellido") + "\t"+rs.getString("telefono")+"\n");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    } 
    public void consulta(String sentencia_sql)
    {
        eliminar_lineas();
       
      
        this.sentencia_sql=sentencia_sql;
        
        ResultSet rs = conector.consulta(sentencia_sql);
        if (rs!=null )
        {
            try {
                while(rs.next())
                {

                    Object[] fila= new Object[9];
                    fila[0]=rs.getString("dni");
                    fila[1]=rs.getString("nombre");
                    fila[2]=rs.getString("apellido");
                    fila[3]=rs.getString("telefono");
                    fila[4]=rs.getString("localidad");
                    fila[5]=rs.getString("provincia");
                    fila[6]=rs.getString("cp");
                    fila[7]=rs.getString("direccion");
                    fila[8]=rs.getString("email");
                    
                    modelotabla.addRow(fila);
                    // String text=Text_Area_Resultado.getText();
                    // Text_Area_Resultado.setText(text++ "\t" + rs.getString("nombre")+ "\t" + rs.getString("apellido") + "\t"+rs.getString("telefono")+"\n");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }

    }     
    public int devolver_pestaña(String titulo_pestaña)
    {
        int pestaña=0;
        pestaña=Panel_pestañas.indexOfTab(titulo_pestaña);
        //Panel_pestañas.getTabComponentAt(pestaña).requestFocus();
        System.out.println("pestaña encontrada "+pestaña);
        return pestaña;
    }
    public void cargar_tabla_resultados()
    {
        
        Object[][] dato=null;
 
        modelotabla = new DefaultTableModel(dato ,nombre_columna);
        
        Table_resultado.setModel(modelotabla);
        Table_resultado.setFont(new java.awt.Font("VTC Letterer Pro", 0, 14));
         ordenar = new TableRowSorter<TableModel>(Table_resultado.getModel());
         Table_resultado.setRowSorter(ordenar);
        
  
        Table_resultado.getTableHeader().addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent me) {
                
                consulta(sentencia_sql);
               //ordenar.setRowFilter(RowFilter.regexFilter("", ));
                System.out.println(""+me.getSource());
            }
            
            
});
        
   /*
        crear la jtable de esta manera para que no sea editable
        en este caso esta introducido en el sourcecode del jtable
        en diseño
        
        table = new javax.swing.JTable(){
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};*/
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Panel_pestañas;
    private javax.swing.JTable Table_resultado;
    private javax.swing.JTextField Text_busqueda;
    private javax.swing.JLabel Text_titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevo_cliente;
    // End of variables declaration//GEN-END:variables
}
